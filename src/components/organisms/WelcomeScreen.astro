---

import Terminal from "../molecules/Terminal.astro";
import LogoContainer from "../molecules/LogoContainer.astro";
import NavButton from "../atoms/NavButton.astro";

---

<section class="welcome-screen">
  <div class="welcome-screen__column">
    <Terminal />
  </div>
  <div class="welcome-screen__column">
    <LogoContainer />
  </div>
</section>
<section class="language-selector">
  <p>Select language packet...</p>
    <div class="language-selector__buttons">
      <NavButton
        href="/home"
        text="english"
      />
      <NavButton
        href="/home"
        text="polski"
      />
    </div>
</section>

<style>
  section.welcome-screen {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    height: auto;
  }

  div.welcome-screen__column {
    width: 50%;
    height: 100%;
  }

  section.language-selector {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: calc(100vh - 530px);
  }

  div.language-selector__buttons {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 30px;
    width: 100%;
    height: auto;
  }

  .welcome-screen__column:nth-child(2),
  .language-selector {
    opacity: 0;
    transition: opacity 1s ease;
  }

  .welcome-screen__column:nth-child(2).visible,
  .language-selector.visible {
    opacity: 1;
  }
</style>

<script>
  async function revealLines() {
    const lines = Array.from(document.querySelectorAll('.hidden'));
    const systemStatus = document.querySelector('.system-status');

    for (let line of lines) {
      line.classList.remove('hidden');

      const statusElement = line.querySelector('.status');
      const statusText = statusElement ? statusElement.textContent.trim().toLowerCase() : '';

      if (statusText === 'failed') {
        await delay(500);
      } else {
        await delay(50);
      }
    }

    await delay(500);
    await blinkSystemStatus(systemStatus, 3);
    systemStatus.style.opacity = 1;

    await delay(500);
    const logoContainer = document.querySelector('.welcome-screen__column:nth-child(2)');
    logoContainer.classList.add('visible');

    await delay(1000);
    const languageSelector = document.querySelector('.language-selector');
    languageSelector.classList.add('visible');
  }

  function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  async function blinkSystemStatus(element, times) {
    for (let i = 0; i < times; i++) {
      element.style.opacity = 0;
      await delay(300);
      element.style.opacity = 1;
      await delay(300);
    }
  }

  revealLines();
</script>
